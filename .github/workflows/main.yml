name: PromptBadge Demo

on:
  push:
    branches: [ main ]        # change to 'master' if thatâ€™s your default branch
    paths:
      - "business_data.csv"
      - "scoring.yml"
      - "scoring.py"
      - "requirements.txt"
      - ".github/workflows/main.yml"
  workflow_dispatch: {}        # allow manual runs

permissions:
  contents: write              # needed to commit generated files

jobs:
  run-scoring:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v4
        with:
          fetch-depth: 0       # safer for auto-commit

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # in case requirements.txt missed something:
          pip install "pandas>=1.5" pyyaml tabulate

      - name: Sanity check files exist
        run: |
          test -f business_data.csv || (echo "Missing business_data.csv" && exit 1)
          test -f scoring.yml || (echo "Missing scoring.yml" && exit 1)
          test -f scoring.py || (echo "Missing scoring.py" && exit 1)

      - name: Show versions (debug)
        run: |
          python - <<'PY'
          import sys, pandas as pd
          import yaml, tabulate
          print("Python:", sys.version)
          print("pandas:", pd.__version__)
          print("PyYAML:", yaml.__version__)
          print("tabulate:", tabulate.__version__)
          PY

      - name: Run scoring
        run: |
          mkdir -p reports
          python scoring.py \
            --inp business_data.csv \
            --config scoring.yml \
            --out reports/badges.csv

      - name: Produce a README-ready markdown table
        run: |
          python - <<'PY'
          import pandas as pd, pathlib
          p = pathlib.Path("reports/badges.csv")
          df = pd.read_csv(p)
          keep = [c for c in ["name","badge","score","sales_units","revenue","new_clients","repeat_orders","region"] if c in df.columns]
          out = df.sort_values("score", ascending=False)[keep].head(10)
          md = out.to_markdown(index=False)  # requires 'tabulate'
          pathlib.Path("reports/badges_table.md").write_text(md)
          print("Markdown table:\n", md)
          PY

      - name: Upload artifacts (optional)
        uses: actions/upload-artifact@v4
        with:
          name: promptbadge-reports
          path: reports/

      - name: Commit updated reports back to repo
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update PromptBadge demo reports [skip ci]"
          file_pattern: reports/*.csv reports/*.md
